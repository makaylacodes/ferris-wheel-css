*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    background: #fcfcfc;
    font-family: sans-serif;
}

.wheel{
    border: 2px solid black;
    border-radius:50%;
    margin-left:50px;
    position: absolute;
    height: 55vw;
    width: 55vw;
    max-height: 500px;
    max-width: 500px;

    /*animation-name is used to link a @keyframes rule to a CSS selector.
    Value of this property should match the name of the @keyframes rule*/
    animation-name: wheel;

    /*animation-duration is used to set the animation time */
    animation-duration: 30s;

    /*animation-iteration-count sets the number of animation repeats.
    Can be set to a specific number or never stop*/
    animation-iteration-count: infinite;

    /*animation-timing-function sets the animation progression. This sets 
    the animation run rate to be the same from start to finish*/
    animation-timing-function: linear;
}

.line{
    background-color: black;
    width: 50%;
    height: 2px;
    position:absolute;
    left:50%;
    top:50%;
    /*offsets the origin point by 0% from left and top by setting it to the 
    top left corner of the element*/
    transform-origin: 0% 0%;
}

/*Transform property allows shape manipulation of an element. Will rotate the 
element around its transform-origin point by 60deg clockwise*/
.line:nth-of-type(2){
    transform: rotate(60deg);
}

.line:nth-of-type(3){
    transform: rotate(120deg);
}
.line:nth-of-type(4){
      transform: rotate(180deg);
}
.line:nth-of-type(5){
      transform: rotate(240deg);
}
.line:nth-of-type(6){
      transform: rotate(300deg);
}

.cabin{
    background-color: red;
    width: 20%;
    height: 20%;
    position: absolute;
    border: 2px solid;

    /*sets the origin point to be offset by 50% from the left and 0% from 
    the top. Places it in the middle of the top edge of the element*/
    transform-origin: 50% 0%;

    /*In wheel, I created four different properties to control animation.
    Below is an example of how to do it in one line*/

    /*ease-in-out tells the animation to start and end at a slow pace, but move
    faster in middle of cycle. Makes cabins look like they are swinging */
    animation: cabins 30s ease-in-out infinite;

}

/*Positions the cabins around the wheel*/
.cabin:nth-of-type(1){
    right: -8.5%;
    top: 50%;
}
.cabin:nth-of-type(2) {
    right: 17%;
    top: 93.5%;
}
.cabin:nth-of-type(3) {
    right: 67%;
    top: 93.5%;
}
.cabin:nth-of-type(4) {
    left: -8.5%;
    top: 50%;
}
.cabin:nth-of-type(5) {
    left: 17%;
    top: 7%;
}
.cabin:nth-of-type(6) {
    right: 17%;
    top: 7%;
}

/*@keyframes is used to define the flow of a css animation. Can be used to 
create selectors for specific points in the animation sequence*/
@keyframes wheel{

    /*0% defines how the animation starts. Properties set in this nested selector
    will apply to the beginning of the animation*/
    0% {
        
        /*Starts the animation with no rotation*/
        transform: rotate(0deg);
    }

    /*100% means the animiation will do a full rotation*/
    100%{
        transform: rotate(360deg);
      }
}

@keyframes cabins{

  0% {
    transform: rotate(0deg);
}
25%{
    background-color:yellow;
}
50%{
    background-color:purple;
}
75%{
    background-color: yellow;
}
100% {
    transform: rotate(-360deg);
}

}


#footer{
    text-align: center;
    font-size:120%;
    font-weight: bolders;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgb(67, 55, 55);
    height: auto;
    width: 100vw;
    padding-top: 20px;
    padding-bottom: 20px;
    color: #fff;      
  }

 a{
    color:#fff;
  }
